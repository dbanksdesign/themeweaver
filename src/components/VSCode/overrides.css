.sidebar {
	height: 100%;
	background-color: var(--application-sideBar-background);
	color: var(--application-sideBar-foreground);
}

.activitybar {
	width: 48px;
	background-color: var(--application-activityBar-background);
	border-right: 1px solid var(--application-activityBar-border);
	height: 100%;
}

.monaco-workbench .activitybar > .content :not(.monaco-menu) > .monaco-action-bar .action-item.checked .active-item-indicator:before {
	/* if activityBar.activeBorder isn't set, vscode uses activityBar.foreground */
	border-left-color: var(--application-activityBar-activeBorder, var(--application-activityBar-foreground));
}

.monaco-action-bar .action-item.checked {
	background-color: var(--application-activityBar-activeBackground);
}

.activitybar .monaco-action-bar .badge {
	position: absolute;
	z-index: 1;
	top: 0;
	bottom: 0;
	margin: auto;
	left: 0;
	overflow: hidden;
	width: 100%;
	height: 100%;
}

.activitybar .monaco-action-bar .badge .badge-content {
	position: absolute;
	top: 24px;
	right: 8px;
	font-size: 9px;
	font-weight: 600;
	min-width: 8px;
	height: 16px;
	line-height: 16px;
	padding: 0 4px;
	border-radius: 20px;
	text-align: center;
}

.badge-content {
	background-color: var(--application-badge-background);
	color: var(--application-badge-foreground);
}

.content .monaco-action-bar .action-label {
	position: relative;
	z-index: 1;
	display: flex;
	overflow: hidden;
	height: 48px;
	margin-right: 0;
	box-sizing: border-box;
	opacity: 0.4;
	transition: opacity 50ms ease;
	color: var(--application-activityBar-foreground);
}

.content .monaco-action-bar .action-item:hover .action-label,
.content .monaco-action-bar .action-item.checked .action-label {
	opacity: 1;
}

/* Tabs */
.title.tabs {
	background-color: var(--application-editorGroupHeader-tabsBackground);
}

.tab {
	background-color: var(--application-tab-inactiveBackground);
}

.tab-label {
	color: var(--application-tab-inactiveForeground);
}

.tab.active {
	background-color: var(--application-tab-activeBackground);
}

.tab.active .tab-label {
	color: var(--application-tab-activeForeground);
}

.tab:hover {
	/* background-color: red !important; */
	box-shadow: var(--application-tab-unfocusedHoverBorder) 0 -1px inset;
}

.show-file-icons .css-lang-file-icon.file-icon::before, .show-file-icons .css-ext-file-icon.ext-file-icon.file-icon::before {
	content: ' ';
	background-image: url(./icons/css.svg);
}

.show-file-icons .css-lang-file-icon.file-icon::before, .show-file-icons .js-ext-file-icon.ext-file-icon.file-icon::before {
	content: ' ';
	background-image: url(./icons/javascript.svg);
}

.show-file-icons .json-ext-file-icon.ext-file-icon.file-icon::before {
	content: ' ';
	background-image: url(./icons/json.svg);
}

.show-file-icons .package\.json-name-file-icon.json-ext-file-icon.ext-file-icon.file-icon::before, .show-file-icons .package-lock\.json-name-file-icon.json-ext-file-icon.ext-file-icon.file-icon::before, .show-file-icons .\.nvmrc-name-file-icon.nvmrc-ext-file-icon.ext-file-icon.file-icon::before, .show-file-icons .\.esmrc-name-file-icon.esmrc-ext-file-icon.ext-file-icon.file-icon::before {
	content: ' ';
	background-image: url(./icons/nodejs.svg);
}

.show-file-icons .folder-icon::before {
	content: ' ';
	background-image: url(./icons/folder.svg);
}

.show-file-icons .gitignore-ext-file-icon::before {
	content: ' ';
	background-image: url(./icons/git.svg);
}

.show-file-icons .src-name-folder-icon::before {
	content: ' ';
	background-image: url(./icons/folder-src-open.svg);
}


.show-file-icons .package\.json-name-file-icon::before {
	content: ' ';
	background-image: url(./icons/nodejs.svg);
}

.show-file-icons .readme\.md-name-file-icon::before {
	content: ' ';
	background-image: url(./icons/readme.svg);
}

.monaco-workbench {
	color: rgba(255, 255, 255, 0.93); /* set by VSCode I think */
}

.monaco-breadcrumbs {
	background-color: var(--application-breadcrumb-background);
	color: var(--application-breadcrumb-foreground);
}

.monaco-breadcrumb-item:hover {
	color: var(--application-breadcrumb-focusForeground);
}

.monaco-breadcrumb-item:active {
	color: var(--application-breadcrumb-activeSelectionForeground);
}


.monaco-workbench .part > .content {
	height: 100%;
}

.monaco-workbench .part {
	height: 100%;
}

.editor-container {
	background-color: var(--application-editor-background);
	color: var(--application-editor-foreground);
	height: calc(100% - 57px);
}

.monaco-editor,
.monaco-editor-background,
.monaco-editor .inputarea.ime-input {
	background-color: var(--application-editor-background) !important;
	color: var(--application-editor-foreground) !important;
}

.monaco-editor .margin {
	background-color: var(--application-editorGutter-background) !important;
}

.monaco-list-row {
	position: relative;
}


.monaco-list.list_id_2 .monaco-list-row:hover {
	background-color: var(--application-list-hoverBackground);
	outline: 1px dashed var(--application-contrastBorder);
	outline-offset: -1px;
}

/* TODO: need to support active/inactive states based on the focus (on the sidebar or editor) */
.monaco-list.list_id_2 .monaco-list-row.selected {
	background-color: var(--application-list-activeSelectionBackground);
}

.monaco-list.list_id_2:hover .monaco-tl-indent > .indent-guide, .monaco-list.list_id_2.always .monaco-tl-indent > .indent-guide {
	border-color: rgba(88, 88, 88, 0.4);
}


.monaco-list.list_id_2 .monaco-tl-indent > .indent-guide.active {
	border-color: #585858;
}

.indent-guide {
	width: 8px;
}

.monaco-list-row.modified {
	color: var(--application-gitDecoration-modifiedResourceForeground);
}

.monaco-icon-label:after {
	opacity: .75;
	font-size: 90%;
	font-weight: 600;
	padding: 0 16px 0 5px;
	text-align: center;
}

.monaco-list-row.modified .monaco-icon-label:after {
	content: 'M';
}

/* .monaco-tl-twistie { padding-left: 8px; } */

.statusbar-item.has-background-color {
	background-color: var(--application-statusBarItem-remoteBackground);
	color: var(--application-statusBarItem-remoteForeground);
}

.statusbar-item:hover {
	background-color: var(--application-statusBarItem-hoverBackground);
}

.panel {
	background-color: var(--application-panel-background);
}

.composite.title {
	border-top-color: var(--application-panel-border);
}

.badge[aria-hidden="true"] { display: none; }

.monaco-action-bar:not(.vertical) .action-item .action-label {
	color: var(--application-panelTitle-inactiveForeground);
}

.monaco-action-bar:not(.vertical) .action-item:hover .action-label {
	color: var(--application-panelTitle-activeForeground);
}

.monaco-action-bar:not(.vertical) .action-item.checked .action-label {
	color: var(--application-panelTitle-activeForeground);
	border-bottom-color: var(--application-panelTitle-activeBorder) !important; /* fuck it */
}

.monaco-select-box {
	background-color: var(--application-dropdown-background);
	border-color: var(--application-dropdown-border);
	color: var(--application-dropdown-foreground);
}

/* .monaco-workbench:focus,
.monaco-workbench:focus-within
.monaco-workbench *:focus {
	outline-color: var(--application-window-activeBorder);
	outline-width: 1px;
	outline-style: solid;
	outline-offset: -1px;
	opacity: 1!important;
} */


.monaco-pane-view .pane>.pane-header h3.title {
	white-space: nowrap;
	text-overflow: ellipsis;
	overflow: hidden;
	font-size: 11px;
	-webkit-margin-before: 0;
	-webkit-margin-after: 0;
	line-height: 22px;
}

.monaco-tl-twistie,
.monaco-icon-label::before {
	box-sizing: content-box;
}

.action-item::before {
	display: none !important;
}

.monaco-workbench .part.sidebar > .title > .title-label h2 {
	line-height: inherit;
}
